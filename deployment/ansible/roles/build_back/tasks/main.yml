- name: Create .env.local
  template:
    src: templates/.env.j2
    dest: "/{{ app_directory }}/backend/.env.local"
    owner: "{{ maintainer_user }}"
    group: "{{ maintainer_user }}"
    mode: '755'

- name: Create directories
  file:
    path: "{{ app_directory }}/backend/{{ item }}"
    state: directory
    owner: "{{ maintainer_user }}"
    group: "{{ maintainer_user }}"
    mode: '755'
    recurse: true
  loop:
    - 'config/jwt'
    - 'var/log'
    - 'var/cache'

- name: Create jwt private rsa keys
  openssl_privatekey:
    path: "{{ app_directory }}/backend/config/jwt/private.pem"
    passphrase: "{{ jwt_passphrase }}"
    cipher: auto
    owner: "{{ maintainer_user }}"
    group: "{{ maintainer_user }}"
    mode: '755'

- name: Create jwt public rsa keys
  openssl_publickey:
    path: "{{ app_directory }}/backend/config/jwt/public.pem"
    privatekey_path: "{{ app_directory }}/backend/config/jwt/private.pem"
    privatekey_passphrase: "{{ jwt_passphrase }}"
    owner: "{{ maintainer_user }}"
    group: "{{ maintainer_user }}"
    mode: '755'

- name: Composer install
  shell:
    cmd: docker-compose exec backend bash -l -c "composer install"
    chdir: "{{ app_directory }}/docker"

- name: Composer cache clear
  shell:
    cmd: docker-compose exec backend bash -l -c "php bin/console cache:clear"
    chdir: "{{ app_directory }}/docker"

- name: Composer migration
  shell:
    cmd: docker-compose exec backend bash -l -c "php bin/console doctrine:migration:migrate --no-interaction"
    chdir: "{{ app_directory }}/docker"

# todo only first time. Avoid as dev dependencies are needed. Make a command to create first user instead.
#- name: Composer fixtures
#  shell:
#    cmd: docker-compose exec backend bash -l -c "php bin/console doctrine:fixtures:load --group=dev --append --no-interaction -e dev"
#    chdir: "{{ app_directory }}/docker"
